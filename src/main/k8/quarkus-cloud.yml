apiVersion: v1
kind: Service
metadata:
  name: quarkus-cloud
  labels:
    app: quarkus-cloud
spec:
  type: NodePort
  selector:
    app: quarkus-cloud
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quarkus-cloud
  labels:
    app: quarkus-cloud
spec:
  selector:
    matchLabels:
      app: quarkus-cloud
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  revisionHistoryLimit: 10
  template:
    metadata:
      name: quarkus-cloud
      labels:
        app: quarkus-cloud
        version: 1.0.0
    spec:
      containers:
        - name: quarkus-cloud
          image: de.icr.io/quarkus/quarkus-cloud:1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 3
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "1024Mi"
              cpu: "1000m"
          envFrom:
            - configMapRef:
                name: redis
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis
data:
  REDIS_HOST: redis.quarkus:6379
